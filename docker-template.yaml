kind: Template
apiVersion: v1
metadata:
  name: kirom-template
  annotations:
    openshift.io/display-name: Php + MySQL
    description: >
      aplikasi yang didalamnya ada Php dan MySQL
    tags: instant-app,php,MySQL
    iconClass: icon-php
labels:
  template: kirom-template

#############################################################################
# Setting Parameter
#############################################################################
parameters:
  - name: APPLICATION_NAME
    description: >
      The name of the application that will be used as a prefix for services,
      routes, images, etc
    value: wordpress
    required: true

  - name: SOURCE_REPOSITORY_URL
    description: The URL of the repository with your application source code
    value: https://github.com/jaredhocutt/openshift-wordpress.git
    required: true

  - name: SOURCE_REPOSITORY_REF
    description: >
      Set this to a branch name, tag or other ref of your repository if you
      are not using the default branch

  - name: GITHUB_WEBHOOK_SECRET
    description: A secret string used to configure the GitHub webhook
    generate: expression
    from: "[a-zA-Z0-9]{40}"

  - name: APPLICATION_DOMAIN
    description: >
      The exposed hostname that will route to the wordpress service, if left
      blank a value will be defaulted
    value:

  - name: DATABASE_NAME
    description: Database name
    value: wordpress
    required: true

  - name: DATABASE_USER
    description: Database user name
    value: wordpress
    required: true

  - name: DATABASE_PASSWORD
    description: Database user password
    value: kirom

  - name: DATABASE_ROOT_PASSWORD
    description: Database user root password
    value: root

#############################################################################
# PHP 
#############################################################################

objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
    labels:
      app: 
    name: ${APPLICATION_NAME}-kirom
  spec:
    lookupPolicy:
      local: false
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
    labels:
      app: ${APPLICATION_NAME}-kirom
    name: ${APPLICATION_NAME}-kirom
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}-kirom:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /
      git:
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: php:7.3
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: ${SECRET}
      type: GitHub
    - generic:
        secret: ${SECRET}
      type: Generic
    - type: ConfigChange
    - imageChange:
      type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
    labels:
      app: ${APPLICATION_NAME}-kirom
    name: ${APPLICATION_NAME}-kirom
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APPLICATION_NAME}-kirom
      deploymentconfig: ${APPLICATION_NAME}-kirom
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
        labels:
          app: ${APPLICATION_NAME}-kirom
          deploymentconfig: ${APPLICATION_NAME}-kirom
      spec:
        containers:
        - env:
          - name: DATABASE_NAME
            value: ${APPLICATION_NAME}-DB
          - name: DATABASE_PASSWORD
            value: ${PASSWORD}
          - name: DATABASE_SERVICE_NAME
            value: ${APPLICATION_NAME}-SVC
          - name: DATABASE_USER
            value: ${DATABASE_USER}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}-kirom
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}-kirom
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}-kirom:latest
      type: ImageChange

#############################################################################
# MySQL PersistentVolumeClaim
#############################################################################
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APPLICATION_NAME}-claim
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 10Mi
    storageClassName: gp2
    volumeMode: Filesystem

#############################################################################
# MySQL DeploymentConfig
#############################################################################
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
      name: ${APPLICATION_NAME}-db
      annotations:
        description: Defines how to deploy the database
  spec:
      strategy:
        type: Recreate
      triggers:
        - type: ConfigChange
      replicas: 1
      selector:
        name: ${APPLICATION_NAME}-db
      template:
        metadata:
          name: ${APPLICATION_NAME}-db
          labels:
            name: ${APPLICATION_NAME}-db
        spec:
          containers:
            - name: mysql
              image: openshift3/mysql-55-rhel7
              ports:
                - containerPort: 3306
              env:
                - name: MYSQL_USER
                  value: ${DATABASE_USER}
                - name: MYSQL_PASSWORD
                  value: ${DATABASE_PASSWORD}
                - name: MYSQL_DATABASE
                  value: ${DATABASE_NAME}
              volumeMounts:
                - name: ${APPLICATION_NAME}-mysql-data
                  mountPath: /var/lib/mysql/data
          volumes:
            - name: ${APPLICATION_NAME}-mysql-data
              persistentVolumeClaim:
                claimName: ${APPLICATION_NAME}-claim

#############################################################################
# Service 
#############################################################################
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
    name: ${APPLICATION_NAME}-svc
    namespace: openshift
    labels:
      app: ${APPLICATION_NAME}-svc
  spec:
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}-svc
      deploymentconfig: ${APPLICATION_NAME}-svc
    type: ClusterIP
    sessionAffinity: None

#############################################################################
# Route 
#############################################################################
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: ${APPLICATION_NAME}-route
    namespace: openshift
    labels:
      app: ${APPLICATION_NAME}-route
    annotations:
  spec:
    to:
      kind: Service
      name: ${APPLICATION_NAME}-svc
      weight: 100
    port:
      targetPort: 8080-tcp
  wildcardPolicy: None